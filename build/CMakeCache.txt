# This is the CMakeCache file.
# For build in directory: /home/millpex/seL4/build
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a file.
BF_GEN_PATH:FILEPATH=/home/millpex/seL4/tools/bitfield_gen.py

//Path to a program.
CCACHE:FILEPATH=/usr/bin/ccache

//Path to a file.
CIRCULAR_INCLUDES:FILEPATH=/home/millpex/seL4/tools/circular_includes.py

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/usr/bin/aarch64-linux-gnu-addr2line

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/aarch64-linux-gnu-ar

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_ASM_COMPILER_AR:FILEPATH=/usr/bin/aarch64-linux-gnu-gcc-ar

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_ASM_COMPILER_RANLIB:FILEPATH=/usr/bin/aarch64-linux-gnu-gcc-ranlib

//Flags used by the ASM compiler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the ASM compiler during DEBUG builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=-g

//Flags used by the ASM compiler during MINSIZEREL builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the ASM compiler during RELEASE builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the ASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/usr/bin/aarch64-linux-gnu-gcc-ar

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/aarch64-linux-gnu-gcc-ranlib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of build database during the build.
CMAKE_EXPORT_BUILD_DATABASE:BOOL=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=/home/millpex/seL4/build/CMakeFiles/pkgRedirects

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/aarch64-linux-gnu-ld

//Program used to build from build.ninja files.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/ninja

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/aarch64-linux-gnu-nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/aarch64-linux-gnu-objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/aarch64-linux-gnu-objdump

//Value Computed by CMake
CMAKE_PROJECT_COMPAT_VERSION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=seL4

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/aarch64-linux-gnu-ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=/usr/bin/aarch64-linux-gnu-readelf

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the archiver during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the archiver during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the archiver during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the archiver during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the archiver during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/aarch64-linux-gnu-strip

//Path to a program.
CMAKE_TAPI:FILEPATH=CMAKE_TAPI-NOTFOUND

//The CMake toolchain file
CMAKE_TOOLCHAIN_FILE:FILEPATH=/home/millpex/seL4/build/gcc.cmake

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Path to a file.
CONFIG_GEN_PATH:FILEPATH=/home/millpex/seL4/tools/config_gen.py

//Path to a file.
CPP_GEN_PATH:FILEPATH=/home/millpex/seL4/tools/cpp_gen.sh

CSPEC_DIR:PATH=.

//Path to a program.
DTC_TOOL:FILEPATH=/usr/bin/dtc

//Always produce ANSI-colored output.
FORCE_COLORED_OUTPUT:BOOL=OFF

//Path to a file.
HARDWARE_GEN_PATH:FILEPATH=/home/millpex/seL4/tools/hardware_gen.py

//Path to a file.
INVOCATION_ID_GEN_PATH:FILEPATH=/home/millpex/seL4/tools/invocation_header_gen.py

//Path to a file.
INVOCATION_JSON_GEN_PATH:FILEPATH=/home/millpex/seL4/tools/invocation_json_gen.py

//Path to a file.
KERNEL_FLAGS_PATH:FILEPATH=/home/millpex/seL4/tools/flags.cmake

//Path to a file.
KERNEL_HELPERS_PATH:FILEPATH=/home/millpex/seL4/tools/helpers.cmake

//Enable any attempt to execute a DC CVAU, DC CIVAC, DC CVAC, or
// IC IVAU     instruction or access to CTR_EL0 at EL0 using AArch64.
//     When disabled, these operations will be trapped.
KernelAArch64UserCacheEnable:BOOL=ON

//Architecture to use when building the kernel
KernelArch:STRING=arm

//PL0 access to PMU.     Grant user access to Performance Monitoring
// Unit.     WARNING: While useful for evaluating performance,
//     this option opens timing and covert channels.
KernelArmExportPMUUser:BOOL=OFF

//Build support for GICv3
KernelArmGicV3:BOOL=ON

//Build as Hypervisor. Utilise ARM virtualisation extensions to
// build the kernel as a hypervisor
KernelArmHypervisorSupport:BOOL=OFF

//Which TLS register is used for Kernel TLS syscalls and invocations.
//     The usual registers used by gnu-elf ABIs are:     - on aarch32:
// tpidruro     - on aarch64: tpidru.
KernelArmTLSReg:STRING=tpidru

//Enable benchmarks including logging and tracing info.     Setting
// this value > 1 enables a 1MB log buffer and functions for extracting
// data from it     at user level. NOTE this is only tested on
// the sabre and will not work on platforms with < 512mb memory.
//     This is not fully implemented for x86.     none -> No Benchmarking
// features enabled.     generic -> Enable global benchmarks config
// variable with no specific features.     track_kernel_entries
// -> Log kernel entries information including timing, number of
// invocations and arguments for     system calls, interrupts,
// user faults and VM faults.     tracepoints -> Enable manually
// inserted tracepoints that the kernel will track time consumed
// between.     track_utilisation -> Enable the kernel to track
// each thread's utilisation time.
KernelBenchmarks:STRING=none

//When enabled, this configuration option restricts the use of
// other options that would      interfere with binary verification.
// For example, it will disable some inter-procedural      optimisations.
// Enabling this options does NOT imply that you are using a verified
// kernel.
KernelBinaryVerificationBuild:BOOL=OFF

//Define a __clzsi2 function to count leading zeros for uint32_t
// arguments.                         Only needed on platforms
// which lack a builtin instruction.
KernelClz32:BOOL=OFF

//Define a __clzdi2 function to count leading zeros for uint64_t
// arguments.                         Only needed on platforms
// which lack a builtin instruction.
KernelClz64:BOOL=OFF

//Expose implementations of clzl and clzll to verification by avoiding
// the use      of __builtin_clzl and __builtin_clzll.
KernelClzNoBuiltin:BOOL=OFF

//Define a __ctzsi2 function to count trailing zeros for uint32_t
// arguments.                         Only needed on platforms
// which lack a builtin instruction.
KernelCtz32:BOOL=OFF

//Define a __ctzdi2 function to count trailing zeros for uint64_t
// arguments.                         Only needed on platforms
// which lack a builtin instruction.
KernelCtz64:BOOL=OFF

//Expose implementations of ctzl and ctzll to verification by avoiding
// the use      of __builtin_ctzl and __builtin_ctzll.
KernelCtzNoBuiltin:BOOL=OFF

//Provide a device tree file to use instead of the KernelPlatform's
// defaults
KernelCustomDTS:FILEPATH=

//Provide an additional list of overlays to append to the selected
// KernelPlatform's         device tree during build time
KernelCustomDTSOverlay:STRING=

//Do not enable branch prediction (also called program flow control)
// on startup.     This makes execution time more deterministic
// at the expense of dramatically decreasing     performance. Primary
// use is for debugging.
KernelDebugDisableBranchPrediction:BOOL=OFF

//Do not enable the L2 cache on startup for debugging purposes.
KernelDebugDisableL2Cache:BOOL=OFF

//A C file providing the symbols ksDomSchedule and ksDomScheduleLength
//         to be linked with the kernel as a scheduling configuration.
KernelDomainSchedule:FILEPATH=/home/millpex/seL4/src/config/default_domain.c

//Enable -fwhole-program when linking kernel. This should work
// modulo gcc bugs, which     are not uncommon with -fwhole-program.
// Consider this feature experimental!
KernelFWholeProgram:BOOL=OFF

//Enable IPC fastpath
KernelFastpath:BOOL=ON

//Use the MCS kernel configuration, which is not verified.
KernelIsMCS:BOOL=OFF

//Max number of bootinfo untyped caps
KernelMaxNumBootinfoUntypedCaps:STRING=230

//Max number of CPU cores to boot
KernelMaxNumNodes:STRING=1

//Maximum number of work units (delete/revoke iterations) until
// the kernel checks for    pending interrupts (and preempts the
// currently running syscall if interrupts are pending).
KernelMaxNumWorkUnitsPerPreemption:STRING=100

//The number of scheduler domains in the system
KernelNumDomains:STRING=1

//The number of priority levels per domain. Valid range 1-256
KernelNumPriorities:STRING=256

//Select the kernel optimisation level
KernelOptimisation:STRING=-O2

//If enabled, allow inter-procedural optimisations that can generate
// cloned or partial      functions, according to the coarse optimisation
// setting (KernelOptimisation).      By default, these optimisations
// are present at -O2 and higher.      If disabled, prevent those
// optimisations, regardless of the coarse optimisation setting.
//      The main use of this option is to disable cloned and partial
// functions when performing      binary verification at -O2. 
//     This currently only affects GCC builds.
KernelOptimisationCloneFunctions:BOOL=ON

//Platform to build
KernelPlatform:STRING=shiba

//Maximum size in bits of chunks of memory to zero before checking
// a preemption point.
KernelResetChunkBits:STRING=8

//Maximum number of objects that can be created in a single Retype()
// invocation.
KernelRetypeFanOutLimit:STRING=256

//Root CNode Size (2^n slots)     The acceptable range is 8-27
// and 7-26, for 32-bit and 64-bit respectively.     The root CNode
// needs at least enough space to contain seL4_NumInitialCaps 
//    plus enough room for all the Untyped Caps.
KernelRootCNodeSizeBits:STRING=12

KernelSel4Arch:STRING=aarch64

//This describes the log2 size of the kernel stack. Great care
// should be taken as    there is no guard below the stack so setting
// this too small will cause random    memory corruption
KernelStackBits:STRING=12

//Number of timer ticks until a thread is preempted.
KernelTimeSlice:STRING=5

//Timer tick period in milliseconds
KernelTimerTickMS:STRING=2

//When enabled this configuration option prevents the usage of
// any other options that    would compromise the verification
// story of the kernel. Enabling this option does NOT    imply
// you are using a verified kernel.
KernelVerificationBuild:BOOL=ON

//Function attributes     default->Verification friendly default
// configuration. syscalls will be inlined,         but generated
// functions will not.     inline->When set to true will mark generated
// functions as 'inline', allowing         them to be inlined by
// the callee user code. This may be undesirable         for verification,
// so setting to 'n' will forcibly prevent the function       
//  from being inlined.     public->When set to true will make
// all user facing functions available as         public symbols,
// which can be convenient for some language bindings.
LibSel4FunctionAttributes:STRING=inline

//use only IPC buffer for syscalls. When generating syscall wrappers,
// only use the     IPC buffer for marshalling and unmarshalling
// arguments. Without this option set,     arguments will be passed
// in registers where possible for better performance.
LibSel4StubsUseIPCBufferOnly:BOOL=OFF

SKIP_MODIFIES:BOOL=ON

SORRY_BITFIELD_PROOFS:BOOL=OFF

//Path to a program.
STAT_TOOL:FILEPATH=/usr/bin/stat

//Path to a file.
SYSCALL_ID_GEN_PATH:FILEPATH=/home/millpex/seL4/tools/syscall_header_gen.py

//Path to a file.
SYSCALL_STUB_GEN_PATH:FILEPATH=/home/millpex/seL4/libsel4/tools/syscall_stub_gen.py

//Path to a file.
UMM_TYPES:FILEPATH=UMM_TYPES-NOTFOUND

//Path to a file.
XMLLINT_PATH:FILEPATH=/home/millpex/seL4/tools/xmllint.sh

//Path to a program.
_GCC_aarch64-linux-gnu-:FILEPATH=/usr/bin/aarch64-linux-gnu-gcc

//Value Computed by CMake
libsel4_BINARY_DIR:STATIC=/home/millpex/seL4/build/libsel4

//Value Computed by CMake
libsel4_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
libsel4_SOURCE_DIR:STATIC=/home/millpex/seL4/libsel4

//Value Computed by CMake
seL4_BINARY_DIR:STATIC=/home/millpex/seL4/build

//Value Computed by CMake
seL4_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
seL4_SOURCE_DIR:STATIC=/home/millpex/seL4


########################
# INTERNAL cache entries
########################

//Default ASM flags for compilation     (subset of flags used by
// the kernel build)
BASE_ASM_FLAGS:INTERNAL= -march=armv8-a  -D__KERNEL_64__
//Default CXX flags for compilation
BASE_CXX_FLAGS:INTERNAL=  -march=armv8-a  -D__KERNEL_64__
//Default C flags for compilation     (subset of flags used by
// the kernel)
BASE_C_FLAGS:INTERNAL= -march=armv8-a  -D__KERNEL_64__
//Default flags for linker an elf binary application
BASE_EXE_LINKER_FLAGS:INTERNAL=' -D__KERNEL_64__  '
//ADVANCED property for variable: BF_GEN_PATH
BF_GEN_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CCACHE
CCACHE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CIRCULAR_INCLUDES
CIRCULAR_INCLUDES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER_AR
CMAKE_ASM_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER_RANLIB
CMAKE_ASM_COMPILER_RANLIB-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/millpex/seL4/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=4
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=1
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/usr/bin/ccmake
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_BUILD_DATABASE
CMAKE_EXPORT_BUILD_DATABASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/millpex/seL4
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//Name of CMakeLists files to read
CMAKE_LIST_FILE_NAME:INTERNAL=CMakeLists.txt
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=2
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_TAPI
CMAKE_TAPI-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_TOOLCHAIN_FILE
CMAKE_TOOLCHAIN_FILE-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
CONFIGURE_IRQ_SLOT_BITS:INTERNAL=10
//ADVANCED property for variable: CONFIG_GEN_PATH
CONFIG_GEN_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPP_GEN_PATH
CPP_GEN_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CSPEC_DIR
CSPEC_DIR-ADVANCED:INTERNAL=0
//ADVANCED property for variable: DTC_TOOL
DTC_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: FORCE_COLORED_OUTPUT
FORCE_COLORED_OUTPUT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HARDWARE_GEN_PATH
HARDWARE_GEN_PATH-ADVANCED:INTERNAL=1
//Builds the kernel with support for a userspace debug API, which
// can     allows userspace processes to set breakpoints, watchpoints
// and to     single-step through thread execution.
HardwareDebugAPI:INTERNAL=OFF
HardwareDebugAPI_DISABLED:INTERNAL=TRUE
//ADVANCED property for variable: INVOCATION_ID_GEN_PATH
INVOCATION_ID_GEN_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: INVOCATION_JSON_GEN_PATH
INVOCATION_JSON_GEN_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: KERNEL_FLAGS_PATH
KERNEL_FLAGS_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: KERNEL_HELPERS_PATH
KERNEL_HELPERS_PATH-ADVANCED:INTERNAL=1
Kernel32:INTERNAL=OFF
Kernel64:INTERNAL=ON
//Enable hardware VFP and SIMD context switch         This enables
// the VFP and SIMD context switch on platforms with         hardware
// support, allowing the user to execute hardware VFP and SIMD
//         operations in a multithreading environment, instead
// of relying on         software emulation of FPU/VFP from the
// C library (e.g. mfloat-abi=soft).
KernelAArch32FPUEnableContextSwitch:INTERNAL=OFF
KernelAArch32FPUEnableContextSwitch_DISABLED:INTERNAL=TRUE
//ADVANCED property for variable: KernelAArch64SErrorIgnore
KernelAArch64SErrorIgnore-ADVANCED:INTERNAL=1
//By default any SError interrupt will halt the kernel. SErrors
// may     be caused by e.g. writes to read-only device registers
// or ECC errors.     When this option is enabled SErrors will
// be ignored.
KernelAArch64SErrorIgnore:INTERNAL=OFF
KernelAArch64SErrorIgnore_DISABLED:INTERNAL=TRUE
KernelARMPlatform:INTERNAL=shiba
KernelAarch64VspaceS2StartL1:INTERNAL=OFF
//Allow components to make SMC calls.     WARNING: Allowing SMC
// calls causes a couple of issues. Since seL4 cannot     pre-empt
// the secure monitor, the WCET is no longer guaranteed. Also,
// since the     secure monitor is a higher privilege level and
// can make any change in the     system, the proofs can no longer
// be guaranteed.
KernelAllowSMCCalls:INTERNAL=OFF
KernelAllowSMCCalls_DISABLED:INTERNAL=TRUE
//STRINGS property for variable: KernelArch
KernelArch-STRINGS:INTERNAL=arm
KernelArchARM:INTERNAL=ON
KernelArchArmV7a:INTERNAL=OFF
KernelArchArmV7ve:INTERNAL=OFF
KernelArchArmV8a:INTERNAL=ON
KernelArch_all_strings:INTERNAL=arm;riscv;x86
KernelArmArmV:INTERNAL=armv8-a
KernelArmCPU:INTERNAL=cortex-a72
KernelArmCacheLineSizeBits:INTERNAL=6
KernelArmCortexA15:INTERNAL=OFF
KernelArmCortexA35:INTERNAL=OFF
KernelArmCortexA53:INTERNAL=OFF
KernelArmCortexA55:INTERNAL=OFF
KernelArmCortexA57:INTERNAL=OFF
KernelArmCortexA7:INTERNAL=OFF
KernelArmCortexA72:INTERNAL=ON
KernelArmCortexA8:INTERNAL=OFF
KernelArmCortexA9:INTERNAL=OFF
//Disable the trapping of WFI     and WFE instructions when configuring
// the     Hyp Configuration Registor (HCR) of a VCPU
KernelArmDisableWFIWFETraps:INTERNAL=OFF
KernelArmDisableWFIWFETraps_DISABLED:INTERNAL=TRUE
//Enable Cortex-A9 prefetcher     Cortex-A9 has an L1 and L2 prefetcher.
// By default     they are disabled. This config options allows
//     them to be turned on. Enabling the prefetchers     requires
// that the kernel be in secure mode. ARM     documents indicate
// that as of r4p1 version of     Cortex-A9 the bits used to enable
// the prefetchers     no longer exist, it is not clear if this
// is just     a document error or not.
KernelArmEnableA9Prefetcher:INTERNAL=OFF
KernelArmEnableA9Prefetcher_DISABLED:INTERNAL=TRUE
//Enable workaround for 430973 Cortex-A8 (r1p0..r1p2) erratum 
//    Enables a workaround for the 430973 Cortex-A8 (r1p0..r1p2)
// erratum. Error occurs     if code containing ARM/Thumb interworking
// branch is replaced by different code     at the same virtual
// address.
KernelArmErrata430973:INTERNAL=OFF
KernelArmErrata430973_DISABLED:INTERNAL=TRUE
//Enable workaround for 773022 Cortex-A15 (r0p0..r0p4) erratum
//     Enables a workaround for the 773022 Cortex-A15 (r0p0..r0p4)
// erratum. Error occurs     on rare sequences of instructions
// and results in the loop buffer delivering     incorrect instructions.
// The work around is to disable the loop buffer
KernelArmErrata773022:INTERNAL=OFF
KernelArmErrata773022_DISABLED:INTERNAL=TRUE
//PL0 access to generic timer CNTPCT and CNTFRQ.     Grant user
// access to physical counter and counter     frequency registers
// of the generic timer.     WARNING: selecting this option opens
// a timing     channel
KernelArmExportPCNTUser:INTERNAL=OFF
KernelArmExportPCNTUser_DISABLED:INTERNAL=TRUE
//PL0 access to generic timer CNTP_CTL and CNTP_CVAL.     Grant
// user access to physical timer registers of the generic timer.
//     WARNING: selecting this option opens a storage channel and
// allows threads to easily     corrupt these registers for each
// other, this should only be used for     debugging / development
// purposes
KernelArmExportPTMRUser:INTERNAL=OFF
KernelArmExportPTMRUser_DISABLED:INTERNAL=TRUE
//PL0 access to generic timer CNTVCT and CNTFRQ.     Grant user
// access to virtual counter and counter     frequency registers
// of the generic timer.     WARNING: selecting this option opens
// a timing     channel
KernelArmExportVCNTUser:INTERNAL=OFF
KernelArmExportVCNTUser_DISABLED:INTERNAL=TRUE
//PL0 access to generic timer CNTV_CTL and CNTV_CVAL.     Grant
// user access to virtual timer registers of the generic timer.
//     WARNING: selecting this option opens a storage channel and
// allows threads to easily     corrupt these registers for each
// other, this should only be used for     debugging / development
// purposes
KernelArmExportVTMRUser:INTERNAL=OFF
KernelArmExportVTMRUser_DISABLED:INTERNAL=TRUE
KernelArmHasTlbLock:INTERNAL=OFF
//STRINGS property for variable: KernelArmHikeyOutstandingPrefetchers
KernelArmHikeyOutstandingPrefetchers-STRINGS:INTERNAL=1;2;3;4;5;6;7
KernelArmHikeyOutstandingPrefetchers:INTERNAL=0
KernelArmHikeyOutstandingPrefetchers_UNAVAILABLE:INTERNAL=ON
//STRINGS property for variable: KernelArmHikeyPrefetcherNPFSTRM
KernelArmHikeyPrefetcherNPFSTRM-STRINGS:INTERNAL=1;2;3;4
KernelArmHikeyPrefetcherNPFSTRM:INTERNAL=0
KernelArmHikeyPrefetcherNPFSTRM_UNAVAILABLE:INTERNAL=ON
//Enable prefetch streams initated by STB access     Enable prefetch
// streams initated by STB access. Enabled is the reset value
KernelArmHikeyPrefetcherSTBPFDIS:INTERNAL=OFF
KernelArmHikeyPrefetcherSTBPFDIS_DISABLED:INTERNAL=TRUE
//Prefetcher to initated on a ReadUnique or ReadShared     Sets
// prefetcher to initated on a ReadUnique (n) or ReadShared (y)
//     ReadUnique is the reset value
KernelArmHikeyPrefetcherSTBPFRS:INTERNAL=OFF
KernelArmHikeyPrefetcherSTBPFRS_DISABLED:INTERNAL=TRUE
//STRINGS property for variable: KernelArmHikeyPrefetcherStride
KernelArmHikeyPrefetcherStride-STRINGS:INTERNAL=2;3
KernelArmHikeyPrefetcherStride:INTERNAL=0
KernelArmHikeyPrefetcherStride_UNAVAILABLE:INTERNAL=ON
//Trap, but don't save/restore VCPUs' CP14 accesses     This allows
// us to turn off the save and restore of VCPU threads' CP14  
//   context for performance (or other) reasons, we can just turn
// them off     and trap them instead, and have the VCPUs' accesses
// to CP14     intercepted and delivered to the VM Monitor as fault
// messages
KernelArmHypEnableVCPUCP14SaveAndRestore:INTERNAL=OFF
KernelArmHypEnableVCPUCP14SaveAndRestore_DISABLED:INTERNAL=TRUE
KernelArmICacheVIPT:INTERNAL=
KernelArmMach:INTERNAL=google
KernelArmPASizeBits40:INTERNAL=OFF
KernelArmPASizeBits44:INTERNAL=ON
//Enable SystemMMU
KernelArmSMMU:INTERNAL=OFF
KernelArmSMMU_DISABLED:INTERNAL=TRUE
//STRINGS property for variable: KernelArmTLSReg
KernelArmTLSReg-STRINGS:INTERNAL=tpidru;tpidruro
KernelArmTLSRegTPIDRU:INTERNAL=ON
KernelArmTLSRegTPIDRURO:INTERNAL=OFF
KernelArmTLSReg_all_strings:INTERNAL=tpidru;tpidruro
//When set the kernel will update the VOFFSET     register of a
// VCPU when restoring it so that its view of Virtual time hasn't
// increased while it     was suspended.  When unset the VOFFSET
// won't be updated other than by the read and write register api.
KernelArmVtimerUpdateVOffset:INTERNAL=ON
KernelArmVtimerUpdateVOffset_DISABLED:INTERNAL=TRUE
//STRINGS property for variable: KernelBenchmarks
KernelBenchmarks-STRINGS:INTERNAL=none
KernelBenchmarksNone:INTERNAL=ON
KernelBenchmarks_all_strings:INTERNAL=none;generic;track_kernel_entries;tracepoints;track_utilisation
KernelBootThreadTimeSlice_UNAVAILABLE:INTERNAL=ON
//In debug mode, seL4 prints diagnostic messages to its serial
// output describing,     e.g., the cause of system call errors.
// This setting determines whether ANSI escape     codes are applied
// to colour code these error messages. You may wish to disable
// this     setting if your serial output is redirected to a file
// or pipe.
KernelColourPrinting:INTERNAL=OFF
KernelColourPrinting_DISABLED:INTERNAL=TRUE
//Location of kernel DTB file
KernelDTBPath:INTERNAL=/home/millpex/seL4/build/kernel.dtb
//Size of DTB blob, in bytes
KernelDTBSize:INTERNAL= 800
//Adds a system call that allows users to specify code to be run
// in kernel mode.     Useful for profiling.
KernelDangerousCodeInjection:INTERNAL=OFF
KernelDangerousCodeInjection_DISABLED:INTERNAL=TRUE
//Enable debug facilities (symbols and assertions) in the kernel
KernelDebugBuild:INTERNAL=OFF
KernelDebugBuild_DISABLED:INTERNAL=TRUE
//Do not enable the L1 data cache on startup for debugging purposes.
KernelDebugDisableL1DCache:INTERNAL=OFF
KernelDebugDisableL1DCache_DISABLED:INTERNAL=TRUE
//Do not enable the L1 instruction cache on startup for debugging
// purposes.
KernelDebugDisableL1ICache:INTERNAL=OFF
KernelDebugDisableL1ICache_DISABLED:INTERNAL=TRUE
//On ia32 platforms, this option disables the L2 hardware prefetcher,
// the L2 adjacent     cache line prefetcher, the DCU prefetcher
// and the DCU IP prefetcher. On the cortex     a53 this disables
// the L1 Data prefetcher.
KernelDebugDisablePrefetchers:INTERNAL=OFF
KernelDebugDisablePrefetchers_DISABLED:INTERNAL=TRUE
KernelEnableBenchmarks:INTERNAL=OFF
KernelEnableSMPSupport:INTERNAL=OFF
//Enable exception fastpath
KernelExceptionFastpath:INTERNAL=OFF
KernelExceptionFastpath_DISABLED:INTERNAL=TRUE
KernelHaveFPU:INTERNAL=ON
//seL4 does not properly check for and handle spurious interrupts.
// This can result     in unnecessary output from the kernel during
// debug builds. If you are CERTAIN these     messages are benign
// then use this config to turn them off.
KernelIRQReporting:INTERNAL=OFF
KernelIRQReporting_DISABLED:INTERNAL=TRUE
//Allows the kernel to write the userError to the IPC buffer
KernelInvocationReportErrorIPC:INTERNAL=OFF
KernelInvocationReportErrorIPC_DISABLED:INTERNAL=TRUE
KernelLogBuffer:INTERNAL=OFF
KernelMaxNumTracePoints:INTERNAL=0
KernelMaxNumTracePoints_UNAVAILABLE:INTERNAL=ON
//STRINGS property for variable: KernelOptimisation
KernelOptimisation-STRINGS:INTERNAL=-O2;-Os;-O0;-O1;-O3
KernelOptimisationO0:INTERNAL=OFF
KernelOptimisationO1:INTERNAL=OFF
KernelOptimisationO2:INTERNAL=ON
KernelOptimisationO3:INTERNAL=OFF
KernelOptimisationOS:INTERNAL=OFF
KernelOptimisation_all_strings:INTERNAL=-O2;-Os;-O0;-O1;-O3
KernelPC99TSCFrequency_UNAVAILABLE:INTERNAL=ON
KernelPaddrUserTop:INTERNAL=17592186044416
KernelPlatShiba:INTERNAL=ON
//STRINGS property for variable: KernelPlatform
KernelPlatform-STRINGS:INTERNAL=bcm2711;bcm2837;fvp;hikey;imx8mq-evk;imx8mm-evk;imx8mp-evk;imx93;maaxboard;odroidc2;odroidc4;qemu-arm-virt;quartz64;rockpro64;shiba;tqma8xqp1gb;tx1;tx2;zynqmp
KernelPlatformFVP:INTERNAL=OFF
KernelPlatformHikey:INTERNAL=OFF
KernelPlatformIMX93:INTERNAL=OFF
KernelPlatformImx8mm-evk:INTERNAL=OFF
KernelPlatformImx8mp-evk:INTERNAL=OFF
KernelPlatformImx8mq-evk:INTERNAL=OFF
KernelPlatformMaaxboard:INTERNAL=OFF
KernelPlatformOdroidc2:INTERNAL=OFF
KernelPlatformOdroidc4:INTERNAL=OFF
KernelPlatformQEMUArmVirt:INTERNAL=OFF
KernelPlatformQuartz64:INTERNAL=OFF
KernelPlatformRockpro64:INTERNAL=OFF
KernelPlatformRpi3:INTERNAL=OFF
KernelPlatformRpi4:INTERNAL=OFF
KernelPlatformTqma8xqp1gb:INTERNAL=OFF
KernelPlatformTx1:INTERNAL=OFF
KernelPlatformTx2:INTERNAL=OFF
KernelPlatformZynqmp:INTERNAL=OFF
KernelPlatform_all_strings:INTERNAL=allwinnerA20;am335x;apq8064;ariane;bcm2711;bcm2837;cheshire;hifive-p550;exynos4;exynos5;fvp;hifive;hikey;imx6;imx7;imx8mq-evk;imx8mm-evk;imx8mp-evk;imx93;maaxboard;odroidc2;odroidc4;omap3;pc99;polarfire;qemu-arm-virt;qemu-riscv-virt;quartz64;rocketchip;rockpro64;shiba;spike;star64;tk1;tqma8xqp1gb;tx1;tx2;zynq7000;zynqmp
//Allow the kernel to print out messages to the serial console
// during bootup and execution.
KernelPrinting:INTERNAL=OFF
KernelPrinting_DISABLED:INTERNAL=TRUE
//STRINGS property for variable: KernelSel4Arch
KernelSel4Arch-STRINGS:INTERNAL=aarch32;aarch64;arm_hyp;riscv32;riscv64;x86_64;ia32
KernelSel4ArchAarch32:INTERNAL=OFF
KernelSel4ArchAarch64:INTERNAL=ON
KernelSel4ArchArmHyp:INTERNAL=OFF
KernelSel4ArchIA32:INTERNAL=OFF
KernelSel4ArchRiscV32:INTERNAL=OFF
KernelSel4ArchRiscV64:INTERNAL=OFF
KernelSel4ArchX86_64:INTERNAL=OFF
KernelSel4Arch_all_strings:INTERNAL=aarch32;aarch64;arm_hyp;riscv32;riscv64;x86_64;ia32
KernelSetTLSBaseSelf:INTERNAL=OFF
//Enable notification signal fastpath
KernelSignalFastpath:INTERNAL=OFF
KernelSignalFastpath_DISABLED:INTERNAL=TRUE
KernelStaticMaxPeriodUs_UNAVAILABLE:INTERNAL=ON
//Enable SystemMMU for the Tegra TK1 SoC
KernelTk1SMMU:INTERNAL=OFF
//Enable SMMU interrupts.     SMMU interrupts currently only serve
// a debug purpose as     they are not forwarded to user level.
// Enabling this will     cause some fault types to print out a
// message in the kernel.     WARNING: Printing fault information
// is slow and rapid faults     can result in all time spent in
// the kernel printing fault     messages
KernelTk1SMMUInterruptEnable:INTERNAL=OFF
KernelTk1SMMUInterruptEnable_DISABLED:INTERNAL=TRUE
KernelTk1SMMU_DISABLED:INTERNAL=TRUE
KernelUserStackTraceLength:INTERNAL=0
KernelUserStackTraceLength_UNAVAILABLE:INTERNAL=ON
KernelUserTop_UNAVAILABLE:INTERNAL=ON
KernelWcetScale_UNAVAILABLE:INTERNAL=ON
KernelWordSize:INTERNAL=64
LibSel4FunctionAttributeDefault:INTERNAL=OFF
LibSel4FunctionAttributeInline:INTERNAL=ON
LibSel4FunctionAttributePublic:INTERNAL=OFF
//STRINGS property for variable: LibSel4FunctionAttributes
LibSel4FunctionAttributes-STRINGS:INTERNAL=inline;default;public
LibSel4FunctionAttributes_all_strings:INTERNAL=inline;default;public
LibSel4PrintInvocationErrors:INTERNAL=0
LibSel4PrintInvocationErrors_UNAVAILABLE:INTERNAL=ON
PYTHON3:INTERNAL=python3
//ADVANCED property for variable: SKIP_MODIFIES
SKIP_MODIFIES-ADVANCED:INTERNAL=0
//ADVANCED property for variable: SORRY_BITFIELD_PROOFS
SORRY_BITFIELD_PROOFS-ADVANCED:INTERNAL=0
//ADVANCED property for variable: STAT_TOOL
STAT_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SYSCALL_ID_GEN_PATH
SYSCALL_ID_GEN_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SYSCALL_STUB_GEN_PATH
SYSCALL_STUB_GEN_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: UMM_TYPES
UMM_TYPES-ADVANCED:INTERNAL=0
//ADVANCED property for variable: XMLLINT_PATH
XMLLINT_PATH-ADVANCED:INTERNAL=1
//Location of platform JSON description
platform_json:INTERNAL=/home/millpex/seL4/build/gen_headers/plat/machine/platform_gen.json
//Location of platform YAML description
platform_yaml:INTERNAL=/home/millpex/seL4/build/gen_headers/plat/machine/platform_gen.yaml

